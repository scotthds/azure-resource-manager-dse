{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "nodeCount": {
      "type": "int",
      "defaultValue": 3,
      "minValue": 1,
      "maxValue": 40,
      "metadata": {
        "description": "Number of virtual machines to provision for the cluster"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_DS4_v2",
      "allowedValues": [
        "Standard_D2s_v3",
        "Standard_D4s_v3",
        "Standard_D8s_v3",
        "Standard_D16s_v3",
        "Standard_D32s_v3",
        "Standard_D64s_v3",
        "Standard_DS2_v2",
        "Standard_DS3_v2",
        "Standard_DS4_v2",
        "Standard_DS5_v2",
        "Standard_DS11_v2",
        "Standard_DS12_v2",
        "Standard_DS13_v2",
        "Standard_DS14_v2",
        "Standard_DS15_v2",
        "Standard_L4s",
        "Standard_L8s",
        "Standard_L16s",
        "Standard_L32s",
        "Standard_GS1",
        "Standard_GS2",
        "Standard_GS3",
        "Standard_GS4",
        "Standard_GS5",
        "Standard_FS1",
        "Standard_FS2",
        "Standard_FS4",
        "Standard_FS8",
        "Standard_FS16",
        "Standard_D2_v2",
        "Standard_D3_v2",
        "Standard_D4_v2",
        "Standard_D5_v2",
        "Standard_D11_v2",
        "Standard_D12_v2",
        "Standard_D13_v2",
        "Standard_D14_v2",
        "Standard_D15_v2",
        "Standard_G1",
        "Standard_G2",
        "Standard_G3",
        "Standard_G4",
        "Standard_G5",
        "Standard_D1",
        "Standard_D2",
        "Standard_D3",
        "Standard_D4",
        "Standard_F1",
        "Standard_F2",
        "Standard_F4",
        "Standard_F8",
        "Standard_F16",
        "Standard_D11",
        "Standard_D12",
        "Standard_D13",
        "Standard_D14",
        "Standard_H8",
        "Standard_H16",
        "Standard_H8m",
        "Standard_H16m",
        "Standard_H16r",
        "Standard_H16mr"
      ],
      "metadata": {
        "description": "Size of virtual machine to provision for the cluster"
      }
    },
    "diskSize": {
      "type": "int",
      "defaultValue": 1023,
      "metadata": {
        "description": "Size (GB) of extenal data volume for each node. If 0, ephemeral disk will be used for data."
      }
    },
    "DSEVersion": {
      "type": "string",
      "defaultValue": "6.7.1",
      "allowedValues": [
        "6.7.1",
        "5.1.11"
      ],
      "metadata": {
        "description": "Version of DSE to deploy"
      }
    },
    "opscvmSize": {
      "type": "string",
      "defaultValue": "Standard_D2s_v3",
      "metadata": {
        "description": "Size of OpsCenter VM"
      }
    },
    "clusterName": {
      "type": "string",
      "defaultValue": "DSECluster",
      "metadata": {
        "description": "Name of DSE cluster"
      }
    },
    "datacenterName": {
      "type": "string",
      "defaultValue": "dc0",
      "metadata": {
        "description": "Name of DSE datacenter, and namespace for VMs"
      }
    },
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin user name for the virtual machines"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for the virtual machines"
      }
    },
    "DBPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for default C* user 'cassandra'"
      }
    },
    "OpsCPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for default OpsCenter user 'admin'"
      }
    },
    "publicIpOnNodes": {
      "type": "string",
      "metadata": {
        "description": "Create and use public ip's on node vm's"
      },
      "defaultValue": "yes",
      "allowedValues": [
        "yes",
        "no"
      ]
    },
    "publicIpOnOpsc": {
      "type": "string",
      "metadata": {
        "description": "Create and use public ip's on node vm's"
      },
      "defaultValue": "yes",
      "allowedValues": [
        "yes",
        "no"
      ]
    },
    "vnetNeworExisting": {
      "type": "string",
      "metadata": {
        "description": "Create a new vNet or use existing"
      },
      "defaultValue": "new",
      "allowedValues": [
        "new",
        "existing"
      ]
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "vnet",
      "metadata": {
        "description": "Name of existing vnet, unused if blank."
      }
    },
    "vnetCIDR": {
      "type": "string",
      "defaultValue": "10.0.0.0/16",
      "metadata": {
        "description": "CIDR of vnet."
      }
    },
    "vnetRG": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Resource group of vnet if different"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "subnet",
      "metadata": {
        "description": "Name of existing vnet, unused if blank."
      }
    },
    "subnetCIDR": {
      "type": "string",
      "defaultValue": "10.0.0.0/24",
      "metadata": {
        "description": "CIDR of subnet."
      }
    },
    "installStudio": {
      "type": "string",
      "metadata": {
        "description": "Install DSE Studio on OpsCenter vm"
      },
      "defaultValue": "yes",
      "allowedValues": [
        "yes",
        "no"
      ]
    },
    "baseUrl": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/DSPN/azure-resource-manager-dse/master",
      "metadata": {
        "description": "URL for nested templates and extensions"
      }
    }
  },
  "variables": {
    "templateUrl": "[concat(parameters('baseUrl'), '/singledc/')]",
    "extensionUrl": "[concat(parameters('baseUrl'), '/extensions/')]",
    "nodesTemplateUrl": "[concat(variables('templateUrl'), 'nodes.json')]",
    "opsCenterPubIPTemplateUrl": "[concat(variables('templateUrl'), 'opsCenterPublicIP.json')]",
    "opsCenterTemplateUrl": "[concat(variables('templateUrl'), 'opsCenter.json')]",
    "location": "[resourcegroup().location]",
    "uniqueString": "[uniqueString(resourceGroup().id, deployment().name)]",
    "opsCenterDomainName": "[concat('opscenter',variables('uniqueString'))]",
    "osSettings": {
      "imageReference": {
        "publisher": "datastax",
        "offer": "datastax-enterprise",
        "sku": "datastaxenterprise",
        "version": "latest"
      },
      "scripts": [
        "[concat(variables('extensionUrl'), 'node.sh')]",
        "[concat(variables('extensionUrl'), 'opsCenter.sh')]",
        "[concat(variables('extensionUrl'), 'studio.sh')]",
        "[concat(variables('extensionUrl'), 'disk.sh')]",
        "https://github.com/DSPN/install-datastax-ubuntu/archive/7.2.0.tar.gz"
      ]
    }
  },
  "resources": [
    {
      "apiVersion": "2017-08-01",
      "name": "pid-7c97edf3-231b-4d54-a35b-e6d7e253f353",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "apiVersion": "2017-11-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[parameters('vnetName')]",
      "condition": "[equals(parameters('vnetNeworExisting'), 'new')]",
      "location": "[variables('location')]",
      "dependsOn": [],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetCIDR')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetCIDR')]"
            }
          }
        ]
      }
    },
    {
      "name": "opsCenterPublicIP",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-08-01",
      "condition": "[equals(parameters('publicIpOnOpsc'), 'yes')]",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('opsCenterPubIPTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "domainName": {
            "value": "[variables('opsCenterDomainName')]"
          }
        }
      }
    },
    {
      "name": "opsCenter",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-08-01",
      "dependsOn": [
        "Microsoft.Resources/deployments/opsCenterPublicIP"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('opsCenterTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "publicIPResourceId": {
            "value": "[resourceId('Microsoft.Network/publicIPAddresses', 'opscenter-pubip')]"
          },
          "publicIpOnOpsc": {
            "value": "[parameters('publicIpOnOpsc')]"
          },
          "uniqueString": {
            "value": "[variables('uniqueString')]"
          },
          "vmSize": {
            "value": "[parameters('opscvmSize')]"
          },
          "clusterName": {
            "value": "[parameters('clusterName')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "OpsCPassword": {
            "value": "[parameters('OpsCPassword')]"
          },
          "DBPassword": {
            "value": "[parameters('DBPassword')]"
          },
          "DSEVersion": {
            "value": "[parameters('DSEVersion')]"
          },
          "nodeCount": {
            "value": "[parameters('nodeCount')]"
          },
          "osSettings": {
            "value": "[variables('osSettings')]"
          },
          "installStudio": {
            "value": "[parameters('installStudio')]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "subnetName": {
            "value": "[parameters('subnetName')]"
          },
          "vnetRG": {
            "value": "[parameters('vnetRG')]"
          }
        }
      }
    },
    {
      "name": "nodes",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-08-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('nodesTemplateUrl')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "location": {
            "value": "[variables('location')]"
          },
          "opsCenterFQDN": {
            "value": "[if(equals(parameters('publicIpOnOpsc'), 'yes'), reference('opsCenterPublicIP').outputs.opsCenterFQDN.value, 'opscenter')]"
          },
          "uniqueString": {
            "value": "[variables('uniqueString')]"
          },
          "OpsCPassword": {
            "value": "[parameters('OpsCPassword')]"
          },
          "adminUsername": {
            "value": "[parameters('adminUsername')]"
          },
          "adminPassword": {
            "value": "[parameters('adminPassword')]"
          },
          "nodeCount": {
            "value": "[parameters('nodeCount')]"
          },
          "vmSize": {
            "value": "[parameters('vmSize')]"
          },
          "diskSize": {
            "value": "[parameters('diskSize')]"
          },
          "osSettings": {
            "value": "[variables('osSettings')]"
          },
          "vnetName": {
            "value": "[parameters('vnetName')]"
          },
          "subnetName": {
            "value": "[parameters('subnetName')]"
          },
          "vnetRG": {
            "value": "[parameters('vnetRG')]"
          },
          "publicIpOnNodes": {
            "value": "[parameters('publicIpOnNodes')]"
          },
          "clusterName": {
            "value": "[parameters('clusterName')]"
          },
          "namespace": {
            "value": "[parameters('datacenterName')]"
          }
        }
      }
    }
  ],
  "outputs": {
    "lifecycleManagerURL": {
      "type": "string",
      "value": "[concat('https://', if(equals(parameters('publicIpOnOpsc'),'yes'), reference('opsCenterPublicIP','2017-08-01').outputs.opsCenterFQDN.value, 'xxxx'), ':8443/opscenter/lcm.html')]"
    },
    "opsCenterURL": {
      "type": "string",
      "value": "[concat('https://', if(equals(parameters('publicIpOnOpsc'),'yes'), reference('opsCenterPublicIP','2017-08-01').outputs.opsCenterFQDN.value, 'xxxx'), ':8443')]"
    },
    "opsCenterPubIp": {
      "type": "string",
      "value": "[if(equals(parameters('publicIpOnOpsc'),'yes'), reference('opsCenterPublicIP','2017-08-01').outputs.opsCenterPubIp.value, 'xxxx')]"
    },
    "opsCenterFQDN": {
      "type": "string",
      "value": "[if(equals(parameters('publicIpOnOpsc'),'yes'), reference('opsCenterPublicIP','2017-08-01').outputs.opsCenterFQDN.value, 'xxxx')]"
    },
    "studioURL": {
      "type": "string",
      "value": "[concat('http://', if(equals(parameters('installStudio'),'yes'), reference('opsCenterPublicIP','2017-08-01').outputs.opsCenterFQDN.value, 'xxxx'), ':9091/notebooks/32714686-1bbd-45cd-bed4-c95de5c242d0')]"
    },
    "nodePubIp": {
      "type": "string",
      "value": "[reference('nodes','2017-08-01').outputs.nodePubIp.value]"
    },
    "nodePrivIp": {
      "type": "string",
      "value": "[reference('nodes','2017-08-01').outputs.nodePrivIp.value]"
    }
  }
}
